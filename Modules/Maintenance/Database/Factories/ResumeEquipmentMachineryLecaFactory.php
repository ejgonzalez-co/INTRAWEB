<?php

/** @var \Illuminate\Database\Eloquent\Factory $factory */

use Modules\Maintenance\Models\ResumeEquipmentMachineryLeca;
use Faker\Generator as Faker;

$factory->define(ResumeEquipmentMachineryLeca::class, function (Faker $faker) {

    return [
        'name_equipment_machinery' => $faker->word,
        'no_identification' => $faker->word,
        'no_inventory_epa_esp' => $faker->word,
        'mark' => $faker->word,
        'model' => $faker->word,
        'serie' => $faker->word,
        'location' => $faker->word,
        'path_information' => $faker->word,
        'acquisition_contract' => $faker->word,
        'provider_data' => $faker->word,
        'apply' => $faker->word,
        'location_specification' => $faker->word,
        'language' => $faker->word,
        'version' => $faker->word,
        'purchase_date' => $faker->word,
        'commissioning_date' => $faker->word,
        'date_withdrawal_service' => $faker->word,
        'observations' => $faker->word,
        'vo_bo_name' => $faker->word,
        'vo_bo_cargo' => $faker->word,
        'magnitude' => $faker->word,
        'unit_measurement' => $faker->word,
        'scale_division' => $faker->word,
        'manufacturer_specification_max_permissible_error' => $faker->word,
        'max_permissible_error_technical_standard_process' => $faker->word,
        'measurement_range' => $faker->word,
        'operation_range' => $faker->word,
        'use_parameter' => $faker->word,
        'use_recommendations' => $faker->word,
        'resolution' => $faker->word,
        'analog_indication' => $faker->word,
        'digital_indication' => $faker->word,
        'wavelength_indication' => $faker->word,
        'adsorption_indication' => $faker->word,
        'feeding' => $faker->word,
        'voltage' => $faker->word,
        'RH' => $faker->word,
        'power' => $faker->word,
        'temperature' => $faker->word,
        'frequency' => $faker->word,
        'revolutions_per_minute' => $faker->word,
        'type_protection' => $faker->word,
        'rated_current' => $faker->word,
        'rated_power' => $faker->word,
        'operating_conditions' => $faker->word,
        'calibration_validation_external_verification' => $faker->word,
        'calibration_frequency' => $faker->word,
        'preventive_maintenance' => $faker->word,
        'maintenance_frequency' => $faker->word,
        'verification_internal_verification' => $faker->word,
        'verification_frequency' => $faker->word,
        'procedure_code' => $faker->word,
        'calibration_points' => $faker->word,
        'calibration_under_accreditation' => $faker->word,
        'reference_norm' => $faker->word,
        'measure_pattern' => $faker->word,
        'criteria_acceptance' => $faker->word,
        'calibration_test' => $faker->word,
        'created_at' => $faker->date('Y-m-d H:i:s'),
        'updated_at' => $faker->date('Y-m-d H:i:s'),
        'deleted_at' => $faker->date('Y-m-d H:i:s'),
        'dependencias_id' => $faker->word,
        'mant_category_id' => $faker->randomDigitNotNull,
        'responsable' => $faker->randomDigitNotNull
    ];
});
